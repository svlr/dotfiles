#!/usr/bin/env python3

from pathlib import Path
import subprocess
import sys

# === CONSTANTS === #
PKG_FILE = Path("packages.txt")


def fail(message: str):
    """–í—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –∑–∞–≤–µ—Ä—à–∞–µ—Ç –ø—Ä–æ–≥—Ä–∞–º–º—É."""
    print(f"[!] –û—à–∏–±–∫–∞: {message}")
    sys.exit(1)


def get_required_packages() -> list:
    """–°—á–∏—Ç—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ –∏–∑ —Ñ–∞–π–ª–∞ packages.txt, –∏—Å–∫–ª—é—á–∞—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏."""
    try:
        with open(PKG_FILE, "r", encoding="utf-8") as f:
            return [
                line.strip()
                for line in f
                if line.strip() and not line.strip().startswith("#")
            ]
    except FileNotFoundError:
        fail("–§–∞–π–ª packages.txt –Ω–µ –Ω–∞–π–¥–µ–Ω!")


def is_package_installed(pkg: str) -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ –ø–∞–∫–µ—Ç —á–µ—Ä–µ–∑ yay -Qi <pkg>."""
    result = subprocess.run(
        ["yay", "-Qi", pkg],
        stdout=subprocess.DEVNULL,
        stderr=subprocess.DEVNULL,
    )
    return result.returncode == 0


def get_missing_packages(required: list) -> list:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ."""
    return [pkg for pkg in required if not is_package_installed(pkg)]


def prompt_yes_no(prompt: str) -> bool:
    """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≤–≤–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è y/n"""
    while True:
        answer = input(f"{prompt} (y/n): ").strip().lower()
        if answer == "y":
            return True
        elif answer == "n":
            return False
        else:
            print("üö´ –í–≤–µ–¥–∏—Ç–µ 'y' –∏–ª–∏ 'n'.")


def install_packages(packages: list):
    """–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–∞–∫–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ yay."""
    result = subprocess.run(["yay", "-S", "--needed", "--noconfirm"] + packages)
    if result.returncode != 0:
        fail("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–∞–∫–µ—Ç–æ–≤ —á–µ—Ä–µ–∑ yay.")
    print("\n[‚úì] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")


def main():
    print("[*] –ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –∏–∑ packages.txt...")
    required_packages = get_required_packages()
    print(f"[+] –¢—Ä–µ–±—É–µ–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤: {len(required_packages)}")

    print("[*] –û–ø—Ä–µ–¥–µ–ª—è—é, –∫–∞–∫–∏–µ –ø–∞–∫–µ—Ç—ã –Ω—É–∂–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å...")
    missing = get_missing_packages(required_packages)
    print(f"[+] –ù–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö –ø–∞–∫–µ—Ç–æ–≤: {len(missing)}")

    if not missing:
        print("[‚úì] –í—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.")
        return

    print("\nüì¶ –ö —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –ø–∞–∫–µ—Ç—ã:\n")
    for pkg in missing:
        print(f" - {pkg}")
    print()

    if prompt_yes_no("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–∞–∫–µ—Ç—ã?"):
        install_packages(missing)
    else:
        print("üö´ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.")


if __name__ == "__main__":
    main()
